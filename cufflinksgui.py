# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bowtiegui.ui'
#
# Created: Tue Mar  1 14:46:40 2016
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(870, 1500)
        MainWindow.setMinimumSize(QtCore.QSize(0, 1500))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 1500))
        MainWindow.setWhatsThis(_fromUtf8(""))
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.scrollArea = QtGui.QScrollArea(self.centralwidget)
        self.centralWidget = QtGui.QWidget(MainWindow)
        layout = QtGui.QVBoxLayout(self.centralWidget)
        layout.addWidget(self.scrollArea)

        #self.scrollArea.setGeometry(QtCore.QRect(0, 0, 41, 111))
        #self.scrollArea.setWidgetResizable(True)
        #self.scrollArea.setObjectName(_fromUtf8("scrollArea"))
        #self.scrollAreaWidgetContents = QtGui.QWidget()
       # self.scrollArea.setGeometry(QtCore.QRect(230, 0, 841, 2481))
        self.scrollArea.setFrameShape(QtGui.QFrame.WinPanel)
        self.scrollArea.setFrameShadow(QtGui.QFrame.Plain)
        self.scrollArea.setLineWidth(7)
        self.scrollArea.setWidgetResizable(False)
       # self.scrollArea.setToolTip("place cursor over the controls for information")

        self.scrollAreaWidgetContents = QtGui.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 812,3052))
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollAreaWidgetContents.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents.setSizePolicy(sizePolicy)
        self.scrollAreaWidgetContents.setObjectName(_fromUtf8("scrollAreaWidgetContents"))
        layout = QtGui.QHBoxLayout(self.scrollAreaWidgetContents)
        self.frame = QtGui.QFrame(self.scrollAreaWidgetContents) # frame that containes main options
        self.frame.setGeometry(QtCore.QRect(50, 10, 741, 3000))
        self.frame.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.frame.setFrameShape(QtGui.QFrame.WinPanel)
        self.frame.setFrameShadow(QtGui.QFrame.Raised)
        self.frame.setLineWidth(10)

        #self.setStyleSheet('background-image: url("/home/amrata/PycharmProjects/bowtieuser/images/images/logn.jpg")')
        self.frame.setObjectName(_fromUtf8("frame"))
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.maxintronlbl = QtGui.QLabel(self.frame) #Do you want to set the Maximum Intron length
        self.maxintronlbl.setGeometry(QtCore.QRect(10, 30, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxintronlbl.setFont(font)
        self.maxintronlbl.setObjectName(_fromUtf8("maxintronlbl"))

        self.maxintrontxt = QtGui.QLineEdit(self.frame)
        self.maxintrontxt.setGeometry(QtCore.QRect(10, 50, 101, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        font.setWeight(50)
        self.maxintrontxt.setFont(font)
        self.maxintrontxt.setObjectName(_fromUtf8("maxintrontxt"))

        self.minisoformlbl = QtGui.QLabel(self.frame) #Do you want to set the Minimum Isoform Fraction
        self.minisoformlbl.setGeometry(QtCore.QRect(10, 100, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.minisoformlbl.setFont(font)
        self.minisoformlbl.setObjectName(_fromUtf8("minisoformlbl"))
        self.minisoformtxt = QtGui.QLineEdit(self.frame)
        self.minisoformtxt.setGeometry(QtCore.QRect(10, 120, 101, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        font.setWeight(50)
        self.minisoformtxt.setFont(font)
        self.minisoformtxt.setObjectName(_fromUtf8("minisoformtxt"))

        self.mrnalbl = QtGui.QLabel(self.frame) #Do you want to set the Pre MRNA Fraction
        self.mrnalbl.setGeometry(QtCore.QRect(10, 170, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.mrnalbl.setFont(font)
        self.mrnalbl.setObjectName(_fromUtf8("mrnalbl"))
        self.mrnatxt = QtGui.QLineEdit(self.frame)
        self.mrnatxt.setGeometry(QtCore.QRect(10, 190, 101, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        font.setWeight(50)
        self.mrnatxt.setFont(font)
        self.mrnatxt.setObjectName(_fromUtf8("mrnatxt"))

        self.refanotlbl = QtGui.QLabel(self.frame) #Do you want to Use Reference Annotation
        self.refanotlbl.setGeometry(QtCore.QRect(10, 240, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.refanotlbl.setFont(font)
        self.refanotlbl.setObjectName(_fromUtf8("refanotlbl"))

        self.refannotcmb = QtGui.QComboBox(self.frame)
        self.refannotcmb.setGeometry(QtCore.QRect(10, 260, 691, 27))
        self.refannotcmb.setToolTip("Please select any one of the options")
        self.refannotcmb.addItem(_fromUtf8(""))
        self.refannotcmb.addItem(_fromUtf8(""))
        self.refannotcmb.addItem(_fromUtf8(""))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.refannotcmb.setFont(font)
        self.refannotcmb.setObjectName(_fromUtf8("refannotcmb"))

        self.groupBox = QtGui.QGroupBox(self.frame) # tgroupbox that containes reference annotations setting
        self.groupBox.setGeometry(QtCore.QRect(10, 300, 711, 261))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setTitle(_fromUtf8(""))
        self.groupBox.setObjectName(_fromUtf8("groupBox"))

        self.subrefanlbl1 = QtGui.QLabel(self.groupBox) #Reference Annotation
        self.subrefanlbl1.setGeometry(QtCore.QRect(10, 10, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.subrefanlbl1.setFont(font)
        self.subrefanlbl1.setObjectName(_fromUtf8("subrefanlbl"))

        self.subrefanpusk1 = QtGui.QPushButton(self.groupBox) #puskbutton is used to select reference annotation file
        self.subrefanpusk1.setGeometry(QtCore.QRect(10, 30, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.subrefanpusk1.setFont(font)
        self.subrefanpusk1.setText(_fromUtf8(""))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.subrefanpusk1.setIcon(icon)
        self.subrefanpusk1.setToolTip("Click here to select single reference annotation file")
        self.subrefanpusk1.setObjectName(_fromUtf8("subrefanpusk1"))

        self.mulfile5 = QtGui.QPushButton(self.groupBox)
        self.mulfile5.setToolTip("Click here to select multiple reference annotation file")
        self.mulfile5.setGeometry(QtCore.QRect(40, 30, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.mulfile5.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index1.png")),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mulfile5.setIcon(icon)
        self.mulfile5.setObjectName(_fromUtf8("mulfile5"))

        self.subrefcomb = QtGui.QComboBox(self.groupBox)
        self.subrefcomb.setGeometry(QtCore.QRect(80, 30, 611, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.subrefcomb.setFont(font)
        self.subrefcomb.setObjectName(_fromUtf8("subrefcomb"))

        self.ovrhngtollbl = QtGui.QLabel(self.groupBox) #Do you want to set 3 prime overhang tolerance
        self.ovrhngtollbl.setGeometry(QtCore.QRect(10, 70, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ovrhngtollbl.setFont(font)
        self.ovrhngtollbl.setObjectName(_fromUtf8("ovrhngtollbl"))

        self.ovrtoltxt = QtGui.QLineEdit(self.groupBox)
        self.ovrtoltxt.setGeometry(QtCore.QRect(10, 90, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ovrtoltxt.setFont(font)
        self.ovrtoltxt.setToolTip("Please provide integer value")
        self.ovrtoltxt.setObjectName(_fromUtf8("ovrtoltxt"))

        self.introvertollbl = QtGui.QLabel(self.groupBox) #Do you want to set the  Intronic overhang tolerance
        self.introvertollbl.setGeometry(QtCore.QRect(10, 140,711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.introvertollbl.setFont(font)
        self.introvertollbl.setObjectName(_fromUtf8("introvertollbl"))

        self.introvtoltxt = QtGui.QLineEdit(self.groupBox)
        self.introvtoltxt.setGeometry(QtCore.QRect(10, 160, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.introvtoltxt.setFont(font)
        self.introvtoltxt.setToolTip("Please provide integer value")
        self.introvtoltxt.setObjectName(_fromUtf8("introvtoltxt"))

        self.tilingreflbl = QtGui.QLabel(self.groupBox) #Do you want to Disable tiling of reference transcripts
        self.tilingreflbl.setGeometry(QtCore.QRect(10, 210,711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tilingreflbl.setFont(font)
        self.tilingreflbl.setObjectName(_fromUtf8("tilingreflbl"))

        self.tilingtxt = QtGui.QComboBox(self.groupBox)
        self.tilingtxt.setGeometry(QtCore.QRect(10, 230, 681, 27))
        self.tilingtxt.setToolTip("Click yes if you want to Disable tiling of reference transcripts otherwise click no")
        self.tilingtxt.addItem(_fromUtf8(""))
        self.tilingtxt.addItem(_fromUtf8(""))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.tilingtxt.setFont(font)
        self.tilingtxt.setObjectName(_fromUtf8("tilingtxt"))

        self.refgrp = QtGui.QGroupBox(self.frame) # groupbox that contains ref annotation
        self.refgrp.setGeometry(QtCore.QRect(10, 300, 700, 171))
        self.refgrp.setTitle(_fromUtf8(""))
        self.refgrp.setObjectName(_fromUtf8("refgrp"))

        self.subrefanpusk = QtGui.QPushButton(self.refgrp)
        self.subrefanpusk.setGeometry(QtCore.QRect(10, 30, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.subrefanpusk.setFont(font)
        self.subrefanpusk.setText(_fromUtf8(""))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.subrefanpusk.setIcon(icon)
        self.subrefanpusk.setToolTip("For single reference annotation file")
        self.subrefanpusk.setObjectName(_fromUtf8("subrefanpusk"))

        self.mulfile1 = QtGui.QPushButton(self.refgrp)
        self.mulfile1.setGeometry(QtCore.QRect(40, 30, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.mulfile1.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index1.png")),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mulfile1.setIcon(icon)
        self.mulfile1.setToolTip("For multiple reference annotation file")
        self.mulfile1.setObjectName(_fromUtf8("mulfile1"))

        self.subrefanlbl = QtGui.QLabel(self.refgrp) # reference annotation
        self.subrefanlbl.setGeometry(QtCore.QRect(10, 10, 221, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.subrefanlbl.setFont(font)
        self.subrefanlbl.setObjectName(_fromUtf8("subrefanlbl"))

        self.subrefancmb = QtGui.QComboBox(self.refgrp)
        self.subrefancmb.setGeometry(QtCore.QRect(80, 30, 611, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        #font.setBold(True)
        font.setWeight(50)
        self.subrefancmb.setFont(font)
        self.subrefancmb.setObjectName(_fromUtf8("subrefancmb"))

        self.label = QtGui.QLabel(self.refgrp) #Count hits compatible with reference RNAs only"
        self.label.setGeometry(QtCore.QRect(10, 80, 671, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName(_fromUtf8("label"))

        self.comboBox = QtGui.QComboBox(self.refgrp)
        self.comboBox.setGeometry(QtCore.QRect(10, 100, 681, 27))
        self.comboBox.setObjectName(_fromUtf8("comboBox"))
        self.comboBox.addItem(_fromUtf8(""))
        self.comboBox.addItem(_fromUtf8(""))
        self.comboBox.setToolTip("Click yes if you want to Count hits compatible with reference RNAs only")
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.comboBox.setFont(font)

        self.frame2 = QtGui.QGroupBox(self.frame) #frame that containes set of options
        self.frame2.setGeometry(QtCore.QRect(10, 310, 711, 1541))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)

        self.frame2.setFont(font)
        self.frame2.setTitle(_fromUtf8(""))
        self.frame2.setObjectName(_fromUtf8("frame2"))

        self.multireadlbl = QtGui.QLabel(self.frame2) #Do you want to Use multi-read correct
        self.multireadlbl.setGeometry(QtCore.QRect(0, 0, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.multireadlbl.setFont(font)
        self.multireadlbl.setObjectName(_fromUtf8("multireadlbl"))

        self.multireadcmb = QtGui.QComboBox(self.frame2)
        self.multireadcmb.setGeometry(QtCore.QRect(0, 20, 691, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.multireadcmb.setFont(font)
        self.multireadcmb.setObjectName(_fromUtf8("multireadcmb"))
        self.multireadcmb.setToolTip("Select Yes to use multi-read correct")
        self.multireadcmb.addItem(_fromUtf8(""))
        self.multireadcmb.addItem(_fromUtf8(""))

        self.lengthcorlbl = QtGui.QLabel(self.frame2) #Do you want to Apply length correction?
        self.lengthcorlbl.setGeometry(QtCore.QRect(0, 70, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lengthcorlbl.setFont(font)
        self.lengthcorlbl.setObjectName(_fromUtf8("lengthcorlbl"))

        self.lengthcorcmb = QtGui.QComboBox(self.frame2)
        self.lengthcorcmb.setGeometry(QtCore.QRect(0, 90, 691, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.lengthcorcmb.setFont(font)
        self.lengthcorcmb.setObjectName(_fromUtf8("lengthcorcmb"))
        self.lengthcorcmb.setToolTip(("Select any one of the option"))
        self.lengthcorcmb.addItem(_fromUtf8(""))
        self.lengthcorcmb.addItem(_fromUtf8(""))
        self.lengthcorcmb.addItem(_fromUtf8(""))

        self.advcufoptlbl = QtGui.QLabel(self.frame2) #Do you want to Set advanced Cufflinks options
        self.advcufoptlbl.setGeometry(QtCore.QRect(0, 140, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.advcufoptlbl.setFont(font)
        self.advcufoptlbl.setObjectName(_fromUtf8("advcufoptlbl"))

        self.advcufoptcmb = QtGui.QComboBox(self.frame2)
        self.advcufoptcmb.setGeometry(QtCore.QRect(0, 160, 691, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.advcufoptcmb.setFont(font)
        self.advcufoptcmb.setObjectName(_fromUtf8("advcufoptcmb"))
        self.advcufoptcmb.setToolTip("Click yes to set advanced Cufflinks options")
        self.advcufoptcmb.addItem(_fromUtf8(""))
        self.advcufoptcmb.addItem(_fromUtf8(""))

        self.groupBox_4 = QtGui.QFrame(self.scrollAreaWidgetContents) # frame that containes advanced cufflink options
        self.groupBox_4.setGeometry(QtCore.QRect(50, 50, 741, 2081))

        self.groupBox_4.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.groupBox_4.setFrameShape(QtGui.QFrame.WinPanel)
        self.groupBox_4.setFrameShadow(QtGui.QFrame.Raised)
        self.groupBox_4.setLineWidth(10)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_4.setFont(font)

        self.groupBox_4.setObjectName(_fromUtf8("groupBox_4"))

        self.libinplbl = QtGui.QLabel(self.groupBox_4) #Do you want to use Library prep used for input reads?
        self.libinplbl.setGeometry(QtCore.QRect(30, 10, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.libinplbl.setFont(font)
        self.libinplbl.setObjectName(_fromUtf8("libinplbl"))

        self.libinpcmb = QtGui.QComboBox(self.groupBox_4)
        self.libinpcmb.setGeometry(QtCore.QRect(30, 30, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        #font.setBold(True)
        font.setWeight(50)
        self.libinpcmb.setFont(font)
        self.libinpcmb.setObjectName(_fromUtf8("libinpcmb"))
        self.libinpcmb.setToolTip("Select any one of the options")
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))
        self.libinpcmb.addItem(_fromUtf8(""))

        self.masklbl = QtGui.QLabel(self.groupBox_4) #Select Mask File
        self.masklbl.setGeometry(QtCore.QRect(30, 80, 711, 20))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.masklbl.setFont(font)
        self.masklbl.setObjectName(_fromUtf8("masklbl"))

        self.maskpush = QtGui.QPushButton(self.groupBox_4)
        self.maskpush.setGeometry(QtCore.QRect(30, 100, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maskpush.setFont(font)
        self.maskpush.setToolTip("Click here to select single Mask file")
        self.maskpush.setText(_fromUtf8(""))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index.png")),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.maskpush.setIcon(icon)
        self.maskpush.setObjectName(_fromUtf8("maskpush"))

        self.maskmulfile2 = QtGui.QPushButton(self.groupBox_4)
        self.maskmulfile2.setGeometry(QtCore.QRect(60, 100, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maskmulfile2.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index1.png")),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.maskmulfile2.setIcon(icon)
        self.maskmulfile2.setToolTip("Click here to select multiple Mask file")
        self.maskmulfile2.setObjectName(_fromUtf8("mulfile2"))

        self.maskcmb = QtGui.QComboBox(self.groupBox_4)
        self.maskcmb.setGeometry(QtCore.QRect(100, 100, 611, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
       # font.setBold(True)
        font.setWeight(50)
        self.maskcmb.setFont(font)
        self.maskcmb.setObjectName(_fromUtf8("maskcmb"))

        self.inrmndistlbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the  Inner mean distance
        self.inrmndistlbl.setGeometry(QtCore.QRect(30, 150, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.inrmndistlbl.setFont(font)
        self.inrmndistlbl.setObjectName(_fromUtf8("inrmndistlbl"))

        self.inrmindisttxt = QtGui.QLineEdit(self.groupBox_4)
        self.inrmindisttxt.setGeometry(QtCore.QRect(30, 170, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.inrmindisttxt.setFont(font)
        self.inrmindisttxt.setToolTip("Please Provide integer values")
        self.inrmindisttxt.setObjectName(_fromUtf8("inrmindisttxt"))

        self.intdiststddevlbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Inner distance standard deviation
        self.intdiststddevlbl.setGeometry(QtCore.QRect(30, 220, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.intdiststddevlbl.setFont(font)
        self.intdiststddevlbl.setObjectName(_fromUtf8("intdiststddevlbl"))

        self.intdiststddevtxt = QtGui.QLineEdit(self.groupBox_4)
        self.intdiststddevtxt.setGeometry(QtCore.QRect(30, 240, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.intdiststddevtxt.setFont(font)
        self.intdiststddevtxt.setToolTip("Please Provide integer values")
        self.intdiststddevtxt.setObjectName(_fromUtf8("intdiststddevtxt"))

        self.maxmlelbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Max MLE iterations
        self.maxmlelbl.setGeometry(QtCore.QRect(30, 290, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxmlelbl.setFont(font)
        self.maxmlelbl.setObjectName(_fromUtf8("maxmlelbl"))

        self.maxmletxt = QtGui.QLineEdit(self.groupBox_4)
        self.maxmletxt.setGeometry(QtCore.QRect(30, 310, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxmletxt.setFont(font)
        self.maxmletxt.setToolTip("Please provide Integer values")
        self.maxmletxt.setObjectName(_fromUtf8("maxmletxt"))

        self.alphalbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Alpha value for the binomial test
        self.alphalbl.setGeometry(QtCore.QRect(30, 360, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.alphalbl.setFont(font)
        self.alphalbl.setObjectName(_fromUtf8("alphalbl"))

        self.alphatxt = QtGui.QLineEdit(self.groupBox_4)
        self.alphatxt.setGeometry(QtCore.QRect(30, 380, 101, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.alphatxt.setFont(font)
        self.alphatxt.setObjectName(_fromUtf8("alphatxt"))

        self.percentlbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the percent read overhang taken as suspiciously small
        self.percentlbl.setGeometry(QtCore.QRect(30, 430, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.percentlbl.setFont(font)
        self.percentlbl.setObjectName(_fromUtf8("percentlbl"))

        self.percenttxt = QtGui.QLineEdit(self.groupBox_4)
        self.percenttxt.setGeometry(QtCore.QRect(30, 450, 101, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.percenttxt.setFont(font)
        self.percenttxt.setObjectName(_fromUtf8("percenttxt"))

        self.introverlbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Intronic overhang tolerance
        self.introverlbl.setGeometry(QtCore.QRect(30, 500, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.introverlbl.setFont(font)
        self.introverlbl.setObjectName(_fromUtf8("introverlbl"))

        self.intronovertxt = QtGui.QLineEdit(self.groupBox_4)
        self.intronovertxt.setGeometry(QtCore.QRect(30, 520, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.intronovertxt.setFont(font)
        self.intronovertxt.setToolTip("Please provide Integer value")
        self.intronovertxt.setObjectName(_fromUtf8("intronovertxt"))

        self.maxgenbunlbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Maximum genomic length of a given bundle
        self.maxgenbunlbl.setGeometry(QtCore.QRect(30, 570, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxgenbunlbl.setFont(font)
        self.maxgenbunlbl.setObjectName(_fromUtf8("maxgenbunlbl"))

        self.maxgnbuntxt = QtGui.QLineEdit(self.groupBox_4)
        self.maxgnbuntxt.setGeometry(QtCore.QRect(30, 590, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxgnbuntxt.setFont(font)
        self.maxgnbuntxt.setToolTip("Please provide Integer value")
        self.maxgnbuntxt.setObjectName(_fromUtf8("maxgnbuntxt"))

        self.maxnumblbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Maximum number of fragments per locus
        self.maxnumblbl.setGeometry(QtCore.QRect(30, 640, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxnumblbl.setFont(font)
        self.maxnumblbl.setObjectName(_fromUtf8("maxnumblbl"))

        self.maxnumtxt = QtGui.QLineEdit(self.groupBox_4)
        self.maxnumtxt.setGeometry(QtCore.QRect(30, 660, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.maxnumtxt.setFont(font)
        self.maxnumtxt.setToolTip("Please provide Integer values")
        self.maxnumtxt.setObjectName(_fromUtf8("maxnumtxt"))

        self.minalsizlbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Minimal allowed intron size
        self.minalsizlbl.setGeometry(QtCore.QRect(30, 710, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.minalsizlbl.setFont(font)
        self.minalsizlbl.setObjectName(_fromUtf8("minalsizlbl"))

        self.minintsiztxt = QtGui.QLineEdit(self.groupBox_4)
        self.minintsiztxt.setGeometry(QtCore.QRect(30, 730, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.minintsiztxt.setFont(font)
        self.minintsiztxt.setToolTip("Please provide Integer values")
        self.minintsiztxt.setObjectName(_fromUtf8("minintsiztxt"))

        self.minavglbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the Minimum average coverage
        self.minavglbl.setGeometry(QtCore.QRect(30, 780, 711, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.minavglbl.setFont(font)
        self.minavglbl.setObjectName(_fromUtf8("minavglbl"))

        self.minavgtxt = QtGui.QLineEdit(self.groupBox_4)
        self.minavgtxt.setGeometry(QtCore.QRect(30, 800, 681, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.minavgtxt.setFont(font)
        self.minavgtxt.setToolTip("Please provide Integer values")
        self.minavgtxt.setObjectName(_fromUtf8("minavgtxt"))

        self.fracavglbl = QtGui.QLabel(self.groupBox_4) #Do you want to set the The fraction of average coverage.
        self.fracavglbl.setGeometry(QtCore.QRect(30, 850, 791, 17))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.fracavglbl.setFont(font)
        self.fracavglbl.setObjectName(_fromUtf8("fracavglbl"))

        self.fracavgtxt = QtGui.QLineEdit(self.groupBox_4)
        self.fracavgtxt.setGeometry(QtCore.QRect(30, 870, 101, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        #font.setBold(True)
        font.setWeight(50)
        self.fracavgtxt.setFont(font)
        self.fracavgtxt.setObjectName(_fromUtf8("fracavgtxt"))

        self.aditinalfrm = QtGui.QFrame(self.groupBox_4) #frame that containes additional options
        self.aditinalfrm.setGeometry(QtCore.QRect(10, 920, 801, 2111))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.aditinalfrm.setFont(font)

        self.aditinalfrm.setObjectName(_fromUtf8("aditinalfrm"))

        self.outlb = QtGui.QLabel(self.aditinalfrm) #Do you want to write all output files to this directory
        self.outlb.setGeometry(QtCore.QRect(20, 20, 541, 17))
        self.outlb.setObjectName(_fromUtf8("outlb"))

        self.outdirtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.outdirtxt.setGeometry(QtCore.QRect(20, 40, 681, 27))
        self.outdirtxt.setToolTip("Please provide Path of directory")
        self.outdirtxt.setObjectName(_fromUtf8("outdirtxt"))

        self.threadl = QtGui.QLabel(self.aditinalfrm) #Please enter the  number of alignment threads to launc
        self.threadl.setGeometry(QtCore.QRect(20, 90, 641, 17))
        self.threadl.setObjectName(_fromUtf8("threadl"))

        self.thrdtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.thrdtxt.setGeometry(QtCore.QRect(20, 110, 681, 27))
        self.thrdtxt.setToolTip("please provide integer value")
        self.thrdtxt.setObjectName(_fromUtf8("thrdtxt"))


        self.seedgen = QtGui.QLabel(self.aditinalfrm) #Do you want to set the  value of random number generator seed
        self.seedgen.setGeometry(QtCore.QRect(20, 160, 691, 17))
        self.seedgen.setObjectName(_fromUtf8("seedgen"))

        self.seedtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.seedtxt.setGeometry(QtCore.QRect(20, 180, 681, 27))
        self.seedtxt.setToolTip("please provide integer value")
        self.seedtxt.setObjectName(_fromUtf8("seedtxt"))

        self.biasln = QtGui.QLabel(self.aditinalfrm) #Do you want to use bias correction
        self.biasln.setGeometry(QtCore.QRect(20, 230, 491, 17))
        self.biasln.setObjectName(_fromUtf8("biasln"))

        self.biastxtcor = QtGui.QComboBox(self.aditinalfrm)
        self.biastxtcor.setGeometry(QtCore.QRect(90, 250, 611, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.biastxtcor.setFont(font)
        self.biastxtcor.setObjectName(_fromUtf8("biastxtcor"))

        self.biaspus = QtGui.QPushButton(self.aditinalfrm)
        self.biaspus.setToolTip("Click here to select single file")
        self.biaspus.setGeometry(QtCore.QRect(20, 250, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.biaspus.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index.png")),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.biaspus.setIcon(icon)
        self.biaspus.setObjectName(_fromUtf8("biaspus"))

        self.biasmulfile3 = QtGui.QPushButton(self.aditinalfrm)
        self.biasmulfile3.setToolTip("Click here to select multiple file")
        self.biasmulfile3.setGeometry(QtCore.QRect(50, 250, 31, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.biasmulfile3.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("/home/amrata/PycharmProjects/bowtieuser/images/index1.png")),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.biasmulfile3.setIcon(icon)
        self.biasmulfile3.setObjectName(_fromUtf8("mulfile3"))

        self.avgfral = QtGui.QLabel(self.aditinalfrm) #Do you want to set average fragment length
        self.avgfral.setGeometry(QtCore.QRect(20, 300, 531, 17))
        self.avgfral.setObjectName(_fromUtf8("avgfral"))


        self.avgfrtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.avgfrtxt.setGeometry(QtCore.QRect(20, 320, 681, 27))
        self.avgfrtxt.setToolTip("Please provide integer value")
        self.avgfrtxt.setObjectName(_fromUtf8("avgfrtxt"))

        self.fransid = QtGui.QLabel(self.aditinalfrm) #Do you want to set fragment length std deviation
        self.fransid.setGeometry(QtCore.QRect(20, 370, 601, 17))
        self.fransid.setObjectName(_fromUtf8("fransid"))

        self.fragstdtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.fragstdtxt.setGeometry(QtCore.QRect(20, 390,681, 27))
        self.fragstdtxt.setToolTip("Please provide integer value")
        self.fragstdtxt.setObjectName(_fromUtf8("fragstdtxt"))

        self.gensampl = QtGui.QLabel(self.aditinalfrm) #Do you want to set Number of fragment generation samples
        self.gensampl.setGeometry(QtCore.QRect(20, 440, 641, 17))
        self.gensampl.setObjectName(_fromUtf8("gensampl"))

        self.gensamtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.gensamtxt.setGeometry(QtCore.QRect(20, 460, 681, 27))
        self.gensamtxt.setToolTip("Please provide integer value")
        self.gensamtxt.setObjectName(_fromUtf8("gensamtxt"))

        self.numfranl = QtGui.QLabel(self.aditinalfrm) #Do you want to set Number of fragment assignment samples per generation
        self.numfranl.setGeometry(QtCore.QRect(20, 510, 681, 17))
        self.numfranl.setObjectName(_fromUtf8("numfranl"))

        self.numfrantxt = QtGui.QLineEdit(self.aditinalfrm)
        self.numfrantxt.setGeometry(QtCore.QRect(20, 530, 681, 27))
        self.numfrantxt.setToolTip("Please provide integer value")
        self.numfrantxt.setObjectName(_fromUtf8("numfrantxt"))

        self.maxalnl = QtGui.QLabel(self.aditinalfrm) #Do you want to set  Maximum number of alignments allowed per fragment
        self.maxalnl.setGeometry(QtCore.QRect(20, 580, 671, 17))
        self.maxalnl.setObjectName(_fromUtf8("maxalnl"))

        self.maxtxts = QtGui.QLineEdit(self.aditinalfrm)
        self.maxtxts.setGeometry(QtCore.QRect(20, 600, 681, 27))
        self.maxtxts.setToolTip("Please provide integer value")
        self.maxtxts.setObjectName(_fromUtf8("maxtxts"))

        self.normalizel = QtGui.QLabel(self.aditinalfrm) #Do you want to  normalizes by the upper quartile of the number of fragments
        self.normalizel.setGeometry(QtCore.QRect(20, 650, 701, 17))
        self.normalizel.setObjectName(_fromUtf8("normalizel"))

        self.normalitxt = QtGui.QLineEdit(self.aditinalfrm)
        self.normalitxt.setGeometry(QtCore.QRect(20, 670, 681, 27))
        self.normalitxt.setToolTip("Please provide integer value")
        self.normalitxt.setObjectName(_fromUtf8("normalitxt"))

        self.tranfrgl = QtGui.QLabel(self.aditinalfrm) #Do you want to set  minimum number of fragments needed for new transfrags
        self.tranfrgl.setGeometry(QtCore.QRect(20, 720, 701, 17))
        self.tranfrgl.setObjectName(_fromUtf8("tranfrgl"))

        self.trantxt = QtGui.QLineEdit(self.aditinalfrm)
        self.trantxt.setGeometry(QtCore.QRect(20, 740, 681, 27))
        self.trantxt.setToolTip("Please provide integer value")
        self.trantxt.setObjectName(_fromUtf8("trantxt"))

        self.multhrdl = QtGui.QLabel(self.aditinalfrm) #Do you want to set maximum fraction of allowed multireads per transcript
        self.multhrdl.setGeometry(QtCore.QRect(20, 790, 661, 17))
        self.multhrdl.setObjectName(_fromUtf8("multhrdl"))

        self.muitxt = QtGui.QLineEdit(self.aditinalfrm)
        self.muitxt.setGeometry(QtCore.QRect(20, 810, 101, 27))
        self.muitxt.setObjectName(_fromUtf8("muitxt"))

        self.maxfracsld = QtGui.QSlider(self.aditinalfrm)
        self.maxfracsld.setToolTip("Drag this slider to set value")
        self.maxfracsld.setGeometry(QtCore.QRect(130, 810, 570, 29))
        self.maxfracsld.setOrientation(QtCore.Qt.Horizontal)
        self.maxfracsld.setMaximum(0)
        self.maxfracsld.setMaximum(10000)
        self.maxfracsld.setObjectName(_fromUtf8("maxfracsld"))

        self.gapl = QtGui.QLabel(self.aditinalfrm) #Do you want to set maximum gap size to fill between transfrags
        self.gapl.setGeometry(QtCore.QRect(20, 860, 631, 17))
        self.gapl.setObjectName(_fromUtf8("gapl"))

        self.gaptxt = QtGui.QLineEdit(self.aditinalfrm)
        self.gaptxt.setGeometry(QtCore.QRect(20, 880, 681, 27))
        self.gaptxt.setToolTip("Please provide integer value")
        self.gaptxt.setObjectName(_fromUtf8("gaptxt"))

        self.idl = QtGui.QLabel(self.aditinalfrm) #Do you want to assembled transcripts have this ID prefix
        self.idl.setGeometry(QtCore.QRect(20, 930, 711, 17))
        self.idl.setObjectName(_fromUtf8("idl"))

        self.idtxt = QtGui.QLineEdit(self.aditinalfrm)
        self.idtxt.setToolTip("Please provide integer value")
        self.idtxt.setGeometry(QtCore.QRect(20, 950, 681, 27))
        self.idtxt.setObjectName(_fromUtf8("idtxt"))

        self.ok = QtGui.QPushButton(self.groupBox_4) #ok button in advance frame
        self.ok.setGeometry(QtCore.QRect(550, 1950, 98, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.ok.setFont(font)
        self.ok.setObjectName(_fromUtf8("ok"))


        self.execute = QtGui.QPushButton(self.frame)
        self.execute.setToolTip("Click here if you are submit these values")
        self.execute.setGeometry(QtCore.QRect(600, 550, 98, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("Droid Serif"))
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.execute.setFont(font)
        self.execute.setObjectName(_fromUtf8("execute"))

        self.horizontalSlider = QtGui.QSlider(self.frame)
        self.horizontalSlider.setGeometry(QtCore.QRect(120, 50, 581, 29))
        self.horizontalSlider.setMinimum(1)
        self.horizontalSlider.setMaximum(600000)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setToolTip("Drag this slider to set value")
        self.horizontalSlider.setObjectName(_fromUtf8("horizontalSlider"))

        self.horizontalSlider_2 = QtGui.QSlider(self.frame)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(120, 120, 581, 29))
        self.horizontalSlider_2.setMinimum(0)
        self.horizontalSlider_2.setMaximum(10000)
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setToolTip("Drag this slider to set value")
        self.horizontalSlider_2.setObjectName(_fromUtf8("horizontalSlider_2"))

        self.horizontalSlider_3 = QtGui.QSlider(self.frame)
        self.horizontalSlider_3.setGeometry(QtCore.QRect(120, 190, 581, 29))
        self.horizontalSlider_3.setMinimum(0)
        self.horizontalSlider_3.setMaximum(10000)
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setToolTip("Drag this slider to set value")
        self.horizontalSlider_3.setObjectName(_fromUtf8("horizontalSlider_3"))

        self.horizontalSlider_4 = QtGui.QSlider(self.groupBox_4)
        self.horizontalSlider_4.setGeometry(QtCore.QRect(150, 380, 561, 29))
        self.horizontalSlider_4.setMinimum(0)
        self.horizontalSlider_4.setMaximum(10000)
        self.horizontalSlider_4.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_4.setToolTip("Drag this slider to set value")
        self.horizontalSlider_4.setObjectName(_fromUtf8("horizontalSlider_4"))

        self.horizontalSlider_5 = QtGui.QSlider(self.groupBox_4)
        self.horizontalSlider_5.setGeometry(QtCore.QRect(150, 450, 561, 29))
        self.horizontalSlider_5.setMinimum(0)
        self.horizontalSlider_5.setMaximum(10000)
        self.horizontalSlider_5.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_5.setToolTip("Drag this slider to set value")
        self.horizontalSlider_5.setObjectName(_fromUtf8("horizontalSlider_6"))

        self.horizontalSlider_6 = QtGui.QSlider(self.groupBox_4)
        self.horizontalSlider_6.setGeometry(QtCore.QRect(150, 870, 561, 29))
        self.horizontalSlider_6.setMinimum(0)
        self.horizontalSlider_6.setMaximum(10000)
        self.horizontalSlider_6.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_6.setToolTip("Drag this slider to set value")
        self.horizontalSlider_6.setObjectName(_fromUtf8("horizontalSlider_6"))
        self.progressbar = QtGui.QProgressBar(self.scrollAreaWidgetContents)
        self.progressbar.setGeometry(QtCore.QRect(50,500,800,25))
        self.progressbar.setObjectName(_fromUtf8("progressbar"))
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        MainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 829, 25))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setObjectName(_fromUtf8("toolBar"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        MainWindow.setCentralWidget(self.centralWidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "CUFFLINKS", None))
        self.maxintronlbl.setText(_translate("MainWindow", "Do you want to set the Maximum Intron length.", None))
        self.minisoformlbl.setText(_translate("MainWindow", "Do you want to set the Minimum Isoform Fraction.", None))
        self.mrnalbl.setText(_translate("MainWindow", "Do you want to set the Pre MRNA Fraction.", None))
        self.refanotlbl.setText(_translate("MainWindow", "Do you want to Use Reference Annotation.", None))
        self.subrefanlbl1.setText(_translate("MainWindow", "Reference Annotation", None))
        self.subrefanlbl.setText(_translate("MainWindow", "Reference Annotation.", None))
        self.comboBox.setItemText(0, _translate("MainWindow", "Yes", None))
        self.comboBox.setItemText(1, _translate("MainWindow", "No", None))
        self.ovrhngtollbl.setText(_translate("MainWindow", "Do you want to set 3 prime overhang tolerance.", None))
        self.introvertollbl.setText(_translate("MainWindow", "Do you want to set the  Intronic overhang tolerance.", None))
        self.tilingreflbl.setText(_translate("MainWindow", "Do you want to Disable tiling of reference transcripts.", None))

        self.multireadlbl.setText(_translate("MainWindow", "Do you want to Use multi-read correct?", None))
        self.multireadcmb.setItemText(0, _translate("MainWindow", "No", None))
        self.multireadcmb.setItemText(1, _translate("MainWindow", "Yes", None))
        self.lengthcorlbl.setText(_translate("MainWindow", "Do you want to Apply length correction?", None))
        self.lengthcorcmb.setItemText(0, _translate("MainWindow", "Cufflinks Effective Length Correction", None))
        self.lengthcorcmb.setItemText(1, _translate("MainWindow", "Standard alength Correction", None))
        self.lengthcorcmb.setItemText(2, _translate("MainWindow", "No Length Correction at all (use raw counts)", None))
        self.advcufoptlbl.setText(_translate("MainWindow", "Do you want to Set advanced Cufflinks options?", None))
        self.advcufoptcmb.setItemText(0, _translate("MainWindow", "Yes", None))
        self.label.setText(_translate("MainWindow", "Count hits compatible with reference RNAs only", None))

        self.advcufoptcmb.setItemText(1, _translate("MainWindow", "No", None))
        self.libinplbl.setText(_translate("MainWindow", "Do you want to use Library prep used for input reads?", None))
        self.libinpcmb.setItemText(0, _translate("MainWindow", "Auto Detect", None))
        self.libinpcmb.setItemText(1, _translate("MainWindow", "ff-firststrand", None))
        self.libinpcmb.setItemText(2, _translate("MainWindow", "ff-secondstrand", None))
        self.libinpcmb.setItemText(3, _translate("MainWindow", "ff-unstranded", None))
        self.libinpcmb.setItemText(4, _translate("MainWindow", "fr-firststrand", None))
        self.libinpcmb.setItemText(5, _translate("MainWindow", "fr-secondstrand", None))
        self.libinpcmb.setItemText(6, _translate("MainWindow", "fr-unstranded", None))
        self.libinpcmb.setItemText(7, _translate("MainWindow", "transfrags", None))
        self.masklbl.setText(_translate("MainWindow", "Select Mask File", None))
        self.inrmndistlbl.setText(_translate("MainWindow", "Do you want to set the  Inner mean distance", None))
        self.intdiststddevlbl.setText(_translate("MainWindow", "Do you want to set the Inner distance standard deviation.", None))
        self.maxmlelbl.setText(_translate("MainWindow", "Do you want to set the Max MLE iterations.", None))
        self.alphalbl.setText(_translate("MainWindow", "Do you want to set the Alpha value for the binomial test ", None))
        self.percentlbl.setText(_translate("MainWindow", "Do you want to set the percent read overhang taken as suspiciously small", None))
        self.introverlbl.setText(_translate("MainWindow", "Do you want to set the Intronic overhang tolerance.", None))
        self.maxgenbunlbl.setText(_translate("MainWindow", "Do you want to set the Maximum genomic length of a given bundle.", None))
        self.maxnumblbl.setText(_translate("MainWindow", "Do you want to set the Maximum number of fragments per locus.", None))
        self.minalsizlbl.setText(_translate("MainWindow", "Do you want to set the Minimal allowed intron size.", None))
        self.minavglbl.setText(_translate("MainWindow", "Do you want to set the Minimum average coverage ", None))
        self.fracavglbl.setText(_translate("MainWindow", "Do you want to set the The fraction of average coverage.", None))

        self.execute.setText(_translate("MainWindow", "Execute", None))
        self.ok.setText(_translate("MainWindow", "OK", None))
        self.refannotcmb.setItemText(0, _translate("MainWindow", "No", None))
        self.refannotcmb.setItemText(1, _translate("MainWindow", "Use reference annotation", None))
        self.refannotcmb.setItemText(2, _translate("MainWindow", "Use reference annotation as guide", None))
        self.tilingtxt.setItemText(0, _translate("MainWindow", "Yes", None))
        self.tilingtxt.setItemText(1, _translate("MainWindow", "No", None))
        self.outlb.setText(_translate("MainWindow", "Do you want to write all output files to this directory  ", None))
        self.threadl.setText(_translate("MainWindow", "Please enter the  number of alignment threads to launch", None))
        self.seedgen.setText(_translate("MainWindow", "Do you want to set the  value of random number generator seed", None))
        self.biasln.setText(_translate("MainWindow", "Do you want to use bias correction", None))

        self.avgfral.setText(_translate("MainWindow", "Do you want to set average fragment length ", None))
        self.fransid.setText(_translate("MainWindow", "Do you want to set fragment length std deviation", None))
        self.gensampl.setText(_translate("MainWindow", "Do you want to set Number of fragment generation samples", None))
        self.numfranl.setText(_translate("MainWindow", "Do you want to set Number of fragment assignment samples per generation", None))
        self.maxalnl.setText(_translate("MainWindow", "Do you want to set  Maximum number of alignments allowed per fragment", None))
        self.normalizel.setText(
            _translate("MainWindow", "Do you want to  normalizes by the upper quartile of the number of fragments",
                       None))
        self.tranfrgl.setText(
            _translate("MainWindow", "Do you want to set  minimum number of fragments needed for new transfrags", None))
        self.multhrdl.setText(
            _translate("MainWindow", "Do you want to set maximum fraction of allowed multireads per transcript", None))
        self.gapl.setText(
            _translate("MainWindow", "Do you want to set maximum gap size to fill between transfrags", None))
        self.idl.setText(_translate("MainWindow", "Do you want to assembled transcripts have this ID prefix", None))
